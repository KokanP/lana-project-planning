name: Run LanaCoin Analysis

on:
  schedule:
    # Example: Run daily at 8 AM UTC
    - cron: '0 8 * * *'
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    # Grant permissions for the GITHUB_TOKEN to push changes back to the repo
    permissions:
      contents: write # Needed to commit changes back

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Use latest major version

      - name: Set up Python
        uses: actions/setup-python@v5 # Use latest major version
        with:
          python-version: '3.10' # Specify a concrete Python version (e.g., 3.10)

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install requests, needed by analysis.py
          pip install requests
          # Optional: Use requirements.txt if you create one
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install requests; fi

      - name: Run Analysis Script
        # Runs the script and redirects standard output to analysis_output.md
        id: analysis
        env:
          # Pass the repository secret CRYPTOID_API_KEY as API_KEY env variable
          API_KEY: ${{ secrets.CRYPTOID_API_KEY }}
        run: |
          # Execute python script, redirecting stdout to a file
          python analysis.py > analysis_output.md
          # Check if output file was created and has content
          if [ ! -s analysis_output.md ]; then
            echo "Analysis script produced no output or failed." >&2 # Print error to stderr
            # Optionally fail the job if output is critical
            # exit 1
          else
            echo "Analysis script finished and produced output."
          fi

      - name: Commit results
        # This step now runs again
        if: true # Ensure this step runs
        run: |
          # Configure git user for commit
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Define the file to be updated in the repository (e.g., RESULTS.md)
          TARGET_FILE="RESULTS.md"

          echo "Copying analysis output to $TARGET_FILE"
          # Copy the script's output file to the target file
          # Use || true to prevent workflow failure if analysis_output.md somehow doesn't exist
          cp analysis_output.md $TARGET_FILE || true

          # Add the target file to git staging
          echo "Adding $TARGET_FILE to git"
          git add $TARGET_FILE

          echo "Checking for changes in $TARGET_FILE..."
          # Commit only if there are changes staged specifically to $TARGET_FILE
          if git diff --staged --quiet $TARGET_FILE; then
            echo "No changes detected in $TARGET_FILE."
          else
            echo "Changes detected in $TARGET_FILE, attempting commit..."
            # Commit only the target file to avoid unrelated changes
            git commit -m "Update LanaCoin analysis results" $TARGET_FILE
            echo "Pushing changes..."
            # Push using default GITHUB_TOKEN (needs 'contents: write' permission)
            git push
            echo "Changes pushed."
          fi

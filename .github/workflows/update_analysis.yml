name: Run LanaCoin Analysis

on:
  schedule:
    # Example: Run daily at 8 AM UTC
    - cron: '0 8 * * *'
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    # Grant permissions for the GITHUB_TOKEN to push changes back to the repo
    permissions:
      contents: write # Needed to commit changes back

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Use latest major version

      - name: Set up Python
        uses: actions/setup-python@v5 # Use latest major version
        with:
          python-version: '3.10' # Specify a concrete Python version (e.g., 3.10)

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install requests, needed by analysis.py
          pip install requests
          # Optional: Use requirements.txt if you create one
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install requests; fi

      - name: Run Analysis Script (Debug Mode - Log All Output)
        # This step now includes extra checks before running the script
        id: analysis
        env:
          # Pass the repository secret CRYPTOID_API_KEY as API_KEY env variable
          API_KEY: ${{ secrets.CRYPTOID_API_KEY }}
        run: |
          echo "---------------------------------------------"
          echo "DEBUGGING STEPS:"
          echo "Current directory: $(pwd)"
          echo "Listing files:"
          ls -la
          echo "Python version:"
          python --version
          echo "Checking analysis.py content:"
          # Use cat || true to prevent workflow failure if file somehow doesn't exist
          cat analysis.py || echo "analysis.py not found or cat failed"
          echo "---------------------------------------------"

          echo "Attempting to run analysis.py..."
          # Execute python script directly, printing all output to logs
          # Make sure analysis.py is in the root, or adjust path e.g., python src/analysis.py
          python analysis.py
          echo "Finished attempting analysis.py."

      - name: Commit results (DISABLED - Enable after debugging)
        # This step is temporarily disabled until the script runs correctly
        if: false
        run: |
          echo "Commit step skipped during debugging."
          # Original commit logic would go here
          # git config --local user.email "action@github.com"
          # git config --local user.name "GitHub Action"
          # TARGET_FILE="RESULTS.md"
          # cp analysis_output.md $TARGET_FILE || true # analysis_output.md not created in debug mode
          # git add $TARGET_FILE
          # if git diff --staged --quiet $TARGET_FILE; then
          #   echo "No changes detected in $TARGET_FILE."
          # else
          #   git commit -m "Update LanaCoin analysis results" $TARGET_FILE
          #   git push
          # fi